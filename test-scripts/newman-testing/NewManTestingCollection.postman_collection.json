{
	"info": {
		"_postman_id": "da953ad0-f76e-48e7-b973-d8cbb1c57c9c",
		"name": "NewManTestingCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25531534"
	},
	"item": [
		{
			"name": "NewMan-200CorrectScenario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"sla: response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var schema = ",
							"{",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"isCorrect\": {",
							"      \"type\": \"boolean\"",
							"    },",
							"    \"correctAnswer\": {",
							"      \"type\": \"number\"",
							"    }",
							"  },",
							"  \"required\": [\"isCorrect\", \"correctAnswer\"]",
							"}",
							"",
							"pm.test(\"Schema Validation Passed\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"value\": 84.2,\n    \"fromUnit\": \"Fahrenheit\",\n    \"toUnit\": \"Rankine\",\n    \"studentResponse\": 543.94\n}"
				},
				"url": {
					"raw": "{{ServiceEndPoint}}{{ResourceEndPoint}}",
					"host": [
						"{{ServiceEndPoint}}{{ResourceEndPoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "NewMan-200IncorrectScenario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"sla: response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var schema = ",
							"{",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"isCorrect\": {",
							"      \"type\": \"boolean\"",
							"    },",
							"    \"correctAnswer\": {",
							"      \"type\": \"number\"",
							"    }",
							"  },",
							"  \"required\": [\"isCorrect\", \"correctAnswer\"]",
							"}",
							"",
							"pm.test(\"Schema Validation Passed\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"value\": 317.33,\n    \"fromUnit\": \"Kelvin\",\n    \"toUnit\": \"Fahrenheit\",\n    \"studentResponse\": 111.554\n}"
				},
				"url": {
					"raw": "{{ServiceEndPoint}}{{ResourceEndPoint}}",
					"host": [
						"{{ServiceEndPoint}}{{ResourceEndPoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "NewMan-400IncorrectStudentResponseFormatScenario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"sla: response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var schema = ",
							"{",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"error\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [\"error\"]",
							"}",
							"",
							"",
							"pm.test(\"Schema Validation Passed\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"value\": 6.5,\n    \"fromUnit\": \"Fahrenheit\",\n    \"toUnit\": \"Rankine\",\n    \"studentResponse\": \"dog\"\n}"
				},
				"url": {
					"raw": "{{ServiceEndPoint}}{{ResourceEndPoint}}",
					"host": [
						"{{ServiceEndPoint}}{{ResourceEndPoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "NewMan-400InvalidInputUnitScenario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"sla: response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var schema = ",
							"{",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"error\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [\"error\"]",
							"}",
							"",
							"",
							"pm.test(\"Schema Validation Passed\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"inputValue\": 136.1,\n    \"inputUnit\": \"dogcow\",\n    \"targetUnit\": \"Rankine\",\n    \"studentResponse\": 45.32\n}"
				},
				"url": {
					"raw": "{{ServiceEndPoint}}{{ResourceEndPoint}}",
					"host": [
						"{{ServiceEndPoint}}{{ResourceEndPoint}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "ResourceEndPoint",
			"value": "/temp-converter/api/check-answer"
		},
		{
			"key": "ServiceEndPoint",
			"value": "http://student-temp-app-dev-lb-187186081.us-east-1.elb.amazonaws.com",
			"type": "default"
		}
	]
}